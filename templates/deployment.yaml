apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.app_name }}-app
  namespace: {{ .Values.namespace }}
  labels:
    app: {{ .Values.app_name }}
spec:
  replicas: {{ .Values.replicas }}
  selector:
    matchLabels:
      app: {{ .Values.app_name }}
  template:
    metadata:
      labels:
        app: {{ .Values.app_name }}
    spec:
      containers:
      - name: {{ .Values.app_name }}
        image: "{{ .Values.images.app.repo }}:{{ .Values.images.app.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.images.app.pullPolicy | default "IfNotPresent" }}
        envFrom:
        - secretRef:
            name: db
        - configMapRef:
            name: {{ .Values.app_name }}-conf
        volumeMounts:
          - name: {{ .Values.app_name }}-app-log
            mountPath: {{ .Values.logs.path }}
      - name: fluentd
        image: fluent/fluentd:v1.10-1
        volumeMounts:
        - name: {{ .Values.app_name }}-app-log
          mountPath: {{ .Values.logs.path }}
        - name:  fdconf
          mountPath:  /fluentd/etc/
      initContainers:
      - name: {{ .Values.init_name }}
        image: "{{ .Values.images.init.repo }}:{{ .Values.images.init.tag | default .Chart.AppVersion }}"
        imagePullPolicy: {{ .Values.images.init.pullPolicy | default "IfNotPresent" }}
        envFrom:
        - secretRef:
            name: db
      imagePullSecrets:
      - name: ecr
      volumes:
      - name: {{ .Values.app_name }}-app-log
        emptyDir: {}
      - name: fdconf
        configMap:
          name: fluentdconf
